cmake_minimum_required(VERSION 3.5)
set(CMAKE_CXX_STANDARD 11)
set(PROJECT_NAME trtInfer)
project(${PROJECT_NAME})
set(CUDA_USE_STATIC_CUDA_RUNTIME OFF)
find_package(CUDA QUIET REQUIRED)
find_package(OpenCV REQUIRED)
IF (CUDA_FOUND AND OpenCV_FOUND)
    include_directories(${CUDA_INCLUDE_DIRS})
    include_directories(${OpenCV_INCLUDE_DIRS})
    message( STATUS "    CUDA_INCLUDE_DIRS: ${CUDA_INCLUDE_DIRS}")
    message( STATUS "    CUDA_LIBRARIES: ${CUDA_LIBRARIES}")
    message( STATUS "    OpenCV version: ${OpenCV_VERSION}" )
    message( STATUS "    OpenCV libraries: ${OpenCV_LIBS}" )
    message( STATUS "    OpenCV include path: ${OpenCV_INCLUDE_DIRS}" )
    set(LIBPATHS /usr/lib/aarch64-linux-gnu /usr/local/cuda-9.0/targets/aarch64-linux/lib)
    link_directories(${LIBPATHS})
    add_executable(${PROJECT_NAME} main.cpp common.h common.cpp)
    target_link_libraries(${PROJECT_NAME} ${CUDA_LIBRARIES} -lnvinfer -lnvparsers -lnvinfer_plugin ${OpenCV_LIBS})
ELSE()
    message(status "##fatal: NO CUDA FOUND...")
    message(status "## exit...")
ENDIF()